<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Stock Screener</title>
</head>

<body>
  <style>
    /* Add a black background color to the top navigation bar */
    .topnav {
      overflow: hidden;
      background-color: rgb(44, 62, 80);
    }

    /* Style the links inside the navigation bar */
    .topnav a {
      float: left;
      display: block;
      color: black;
      text-align: center;
      padding: 14px 16px;
      text-decoration: none;
      font-size: 17px;
    }

    /* Change the color of links on hover */
    .topnav a:hover {
      background-color: #ddd;
      color: black;
    }

    /* Style the "active" element to highlight the current page */
    .topnav a.active {
      background-color: #2196F3;
      color: white;
    }

    /* Style the search box inside the navigation bar */
    .topnav input[type=text] {
      float: right;
      padding: 6px;
      border: none;
      margin-top: 8px;
      margin-right: 16px;
      font-size: 17px;
    }

    /* When the screen is less than 600px wide, stack the links and the search field vertically instead of horizontally */
    @media screen and (max-width: 600px) {

      .topnav a,
      .topnav input[type=text] {
        float: none;
        display: block;
        text-align: left;
        width: 100%;
        margin: 0;
        padding: 14px;
      }

      .topnav input[type=text] {
        border: 1px solid #ccc;
      }
    }

    .container {
      font-family: "Roboto", sans-serif;
      color: #EEEFEF;
      background-color: #161B23;
      display: grid;
      grid-template-columns: 0.4fr 2.2fr 0.4fr;
      grid-template-rows: 0.4fr 2fr 0.6fr;
      grid-auto-columns: 1fr;
      grid-auto-rows: 1fr;
      gap: 5px 5px;
      grid-auto-flow: row;
      grid-template-areas:
        ". HEADER ."
        ". FITLER ."
        ". SUMBIT .";
    }

    body {
      background-color: #161B23;
    }


    .FITLER {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-template-rows: 1fr 1fr 1fr 1fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-1 FILTER-2 FILTER-3"
        "FILTER-4 FILTER-5 FILTER-6"
        "FILTER-7 FILTER-8 FILTER-9"
        "FILTER-10 FILTER-11 FILTER-12";
      grid-area: FITLER;
    }

    .FILTER-1 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-1-NAME FILTER-1-NAME"
        "FILTER-1-TYPE FILTER-1-VALUE";
      grid-area: FILTER-1;
    }

    .FILTER-1-NAME {
      grid-area: FILTER-1-NAME;
    }

    .FILTER-1-TYPE {
      grid-area: FILTER-1-TYPE;
    }

    .FILTER-1-VALUE {
      grid-area: FILTER-1-VALUE;
    }

    .FILTER-2 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-2-NAME FILTER-2-NAME"
        "FILTER-2-TYPE FILTER-2-VALUE";
      grid-area: FILTER-2;
    }

    .FILTER-2-NAME {
      grid-area: FILTER-2-NAME;
    }

    .FILTER-2-TYPE {
      grid-area: FILTER-2-TYPE;
    }

    .FILTER-2-VALUE {
      grid-area: FILTER-2-VALUE;
    }

    .FILTER-3 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-3-NAME FILTER-3-NAME"
        "FILTER-3-TYPE FILTER-3-VALUE";
      grid-area: FILTER-3;
    }

    .FILTER-3-NAME {
      grid-area: FILTER-3-NAME;
    }

    .FILTER-3-TYPE {
      grid-area: FILTER-3-TYPE;
    }

    .FILTER-3-VALUE {
      grid-area: FILTER-3-VALUE;
    }

    .FILTER-4 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-4-NAME FILTER-4-NAME"
        "FILTER-4-TYPE FILTER-4-VALUE";
      grid-area: FILTER-4;
    }

    .FILTER-4-NAME {
      grid-area: FILTER-4-NAME;
    }

    .FILTER-4-TYPE {
      grid-area: FILTER-4-TYPE;
    }

    .FILTER-4-VALUE {
      grid-area: FILTER-4-VALUE;
    }

    .FILTER-5 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-5-NAME FILTER-5-NAME"
        "FILTER-5-TYPE FILTER-5-VALUE";
      grid-area: FILTER-5;
    }

    .FILTER-5-NAME {
      grid-area: FILTER-5-NAME;
    }

    .FILTER-5-TYPE {
      grid-area: FILTER-5-TYPE;
    }

    .FILTER-5-VALUE {
      grid-area: FILTER-5-VALUE;
    }

    .FILTER-6 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-6-NAME FILTER-6-NAME"
        "FILTER-6-TYPE FILTER-6-VALUE";
      grid-area: FILTER-6;
    }

    .FILTER-6-NAME {
      grid-area: FILTER-6-NAME;
    }

    .FILTER-6-TYPE {
      grid-area: FILTER-6-TYPE;
    }

    .FILTER-6-VALUE {
      grid-area: FILTER-6-VALUE;
    }

    .FILTER-7 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-7-NAME FILTER-7-NAME"
        "FILTER-7-TYPE FILTER-7-VALUE";
      grid-area: FILTER-7;
    }

    .FILTER-7-NAME {
      grid-area: FILTER-7-NAME;
    }

    .FILTER-7-TYPE {
      grid-area: FILTER-7-TYPE;
    }

    .FILTER-7-VALUE {
      grid-area: FILTER-7-VALUE;
    }

    .FILTER-8 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-8-NAME FILTER-8-NAME"
        "FILTER-8-TYPE FILTER-8-VALUE";
      grid-area: FILTER-8;
    }

    .FILTER-8-NAME {
      grid-area: FILTER-8-NAME;
    }

    .FILTER-8-TYPE {
      grid-area: FILTER-8-TYPE;
    }

    .FILTER-8-VALUE {
      grid-area: FILTER-8-VALUE;
    }

    .FILTER-9 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-9-NAME FILTER-9-NAME"
        "FILTER-9-TYPE FILTER-9-VALUE";
      grid-area: FILTER-9;
    }

    .FILTER-9-NAME {
      grid-area: FILTER-9-NAME;
    }

    .FILTER-9-VALUE {
      grid-area: FILTER-9-VALUE;
    }

    .FILTER-9-TYPE {
      grid-area: FILTER-9-TYPE;
    }

    .FILTER-10 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-10-NAME FILTER-10-NAME"
        "FILTER-10-TYPE FILTER-10-VALUE";
      grid-area: FILTER-10;
    }

    .FILTER-10-NAME {
      grid-area: FILTER-10-NAME;
    }

    .FILTER-10-VALUE {
      grid-area: FILTER-10-VALUE;
    }

    .FILTER-10-TYPE {
      grid-area: FILTER-10-TYPE;
    }

    .FILTER-11 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-11-NAME FILTER-11-NAME"
        "FILTER-11-TYPE FILTER-11-VALUE";
      grid-area: FILTER-11;
    }

    .FILTER-11-NAME {
      grid-area: FILTER-11-NAME;
    }

    .FILTER-11-VALUE {
      grid-area: FILTER-11-VALUE;
    }

    .FILTER-11-TYPE {
      grid-area: FILTER-11-TYPE;
    }

    .FILTER-12 {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 0.7fr 1.3fr;
      gap: 0px 0px;
      grid-template-areas:
        "FILTER-12-NAME FILTER-12-NAME"
        "FILTER-12-TYPE FILTER-12-VALUE";
      grid-area: FILTER-12;
    }

    .FILTER-12-NAME {
      grid-area: FILTER-12-NAME;
    }

    .FILTER-12-VALUE {
      grid-area: FILTER-12-VALUE;
    }

    .FILTER-12-TYPE {
      grid-area: FILTER-12-TYPE;
    }

    .HEADER {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: 1.2fr 0.8fr;
      gap: 0px 0px;
      grid-template-areas:
        "."
        ".";
      grid-area: HEADER;
      margin: auto;
      font-size: 300%;
    }

    .SUMBIT {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-template-rows: 1.3fr 0.7fr 1fr;
      gap: 0px 0px;
      grid-template-areas:
        ". SUBMIT-BUTTON ."
        ". . ."
        ". . .";
      grid-area: SUMBIT;
    }

    .SUBMIT-BUTTON {
      grid-area: SUBMIT-BUTTON;
      margin: auto;
    }


    html,
    body,
    .container {
      height: 100%;
      margin: 0;
    }

    .FITLER {
      text-align: center;
    }

    optgroup {
      font-size: 150%;
    }

    .round {
      border-radius: 12px;
      background: #1C222C;
      box-shadow: 6px 2px 4px rgba(0, 0, 0, 0.50);
      margin: 3%;
    }

    .drop {
      width: 80%;
    }

    .names {
      text-shadow: 6px 2px 4px rgba(0, 0, 0, 0.50);
      margin-top: 3%;
      font-size: 135%;
    }

    .select {
      margin-top: 8%;
    }

    input[type="text"] {
      font-size: 150%;
      margin-top: 6%;
    }

    .button {
      background-color: DodgerBlue;
      color: #fff;
      font-size: 300%;
      border-radius: 6px;
      cursor: pointer;
    }

    .table {
      width: 80%;
      margin-right: auto;
      margin-left: auto;
      font-family: "Roboto", sans-serif;
      color: #EEEFEF;
      border-collapse: separate;
      border-spacing: 0 1em;
      font-size: 120%;
    }

    tr:hover {
      background-color: rgb(27, 79, 131);
    }

    th {
      cursor: pointer;
    }

    .table a {
      color: #EEEFEF;
    }

    .picked {
      background-color: DodgerBlue;
    }
  </style>

  <div class="topnav">
    <a class="active" href="/">Home</a>
    <a href="/screener">Screener</a>
    <input type="text" placeholder="Search.." onsubmit="">
  </div>

  <div class="container">
    <div class="FITLER">
      <div class="FILTER-1 round">
        <div class="FILTER-1-NAME names">P/E ratio</div>
        <div class="FILTER-1-TYPE">
          <div class="select" onchange="Change(1)">
            <select class="drop" id="pe">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-1-VALUE">
          <input type="text" id="pe_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-2 round">
        <div class="FILTER-2-NAME names">Dividend %</div>
        <div class="FILTER-2-TYPE">
          <div class="select" onchange="Change(2)">
            <select class="drop" id="dividend">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-2-VALUE">
          <input type="text" id="dividend_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-3 round">
        <div class="FILTER-3-NAME names"> Earnings Per Share</div>
        <div class="FILTER-3-TYPE">
          <div class="select" onchange="Change(3)">
            <select class="drop" id="eps">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-3-VALUE">
          <input type="text" id="eps_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-4 round">
        <div class="FILTER-4-NAME names"> Volatility</div>
        <div class="FILTER-4-TYPE">
          <div class="select" onchange="Change(4)">
            <select class="drop" id="vol">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-4-VALUE">
          <input type="text" id="vol_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-5 round">
        <div class="FILTER-5-NAME names">Share Price</div>
        <div class="FILTER-5-TYPE">
          <div class="select" onchange="Change(5)">
            <select class="drop" id="price">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-5-VALUE">
          <input type="text" id="price_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-6 round">
        <div class="FILTER-6-NAME names">Insider Own %</div>
        <div class="FILTER-6-TYPE">
          <div class="select" onchange="Change(6)">
            <select class="drop" id="insider">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-6-VALUE">
          <input type="text" id="insider_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-7 round">
        <div class="FILTER-7-NAME names">Relative strength index</div>
        <div class="FILTER-7-TYPE">
          <div class="select" onchange="Change(7)">
            <select class="drop" id="rsi">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-7-VALUE">
          <input type="text" id="rsi_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-8 round">
        <div class="FILTER-8-NAME names">7-day Article Sentiment</div>
        <div class="FILTER-8-TYPE">
          <div class="select" onchange="Change(8)">
            <select class="drop" id="7daysent">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
        <div class="FILTER-8-VALUE">
          <input type="text" id="7daysent_val" maxlength="4" size="4">
        </div>
      </div>
      <div class="FILTER-9 round">
        <div class="FILTER-9-NAME names">Return on Equity</div>
        <div class="FILTER-9-VALUE">
          <input type="text" id="roe_val" maxlength="4" size="4">
        </div>
        <div class="FILTER-9-TYPE">
          <div class="select" onchange="Change(9)">
            <select class="drop" id="roe">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
      </div>
      <div class="FILTER-10 round">
        <div class="FILTER-10-NAME names">Analyst Target Price / Share price %</div>
        <div class="FILTER-10-VALUE">
          <input type="text" id="analyst_val" maxlength="4" size="4">
        </div>
        <div class="FILTER-10-TYPE">
          <div class="select" onchange="Change(10)">
            <select class="drop" id="analyst">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
      </div>
      <div class="FILTER-11 round">
        <div class="FILTER-11-NAME names">P/B </div>
        <div class="FILTER-11-VALUE">
          <input type="text" id="pb_val" maxlength="4" size="4">
        </div>
        <div class="FILTER-11-TYPE">
          <div class="select" onchange="Change(11)">
            <select class="drop" id="pb">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
      </div>
      <div class="FILTER-12 round">
        <div class="FILTER-12-NAME names">Return on investment</div>
        <div class="FILTER-12-VALUE">
          <input type="text" id="roi_val" maxlength="4" size="4">
        </div>
        <div class="FILTER-12-TYPE">
          <div class="select" onchange="Change(12)">
            <select class="drop" id="roi">
              <optgroup>
                <option value="0">None</option>
                <option value="1">Above</option>
                <option value="2">Below</option>
                <option value="3">Exctacly</option>
              </optgroup>
            </select>
          </div>
        </div>
      </div>
    </div>
    <div class="HEADER"> Stock Screener</div>
    <div class="SUMBIT">
      <div class="SUBMIT-BUTTON">
        <button class="button" onclick="filter()">Submit</button>
      </div>
    </div>
  </div>

  <table id="fetch" cellspacing="1" cellpadding="8" class="table">
    <tr class="round">
      <th onclick="sortTable(0)">Ticker</th>
      <th onclick="sortTableNum(1)">Price</th>
      <th onclick="sortTableNum(2)">P/E</th>
      <th onclick="sortTableNum(3)">RSI</th>
      <th onclick="sortTableNum(4)">Target Price</th>
      <th onclick="sortTableNum(5)">Volatility</th>
      <th onclick="sortTableNum(6)">EPS</th>
      <th onclick="sortTableNum(7)">Dividend</th>
      <th onclick="sortTableNum(8)">ROE</th>
      <th onclick="sortTableNum(9)">ROI</th>
      <th onclick="sortTableNum(11)">P/B</th>
      <th onclick="sortTableNum(12)">Insider Own</th>
    </tr>
</body>
<script>

  const Http = new XMLHttpRequest();
  const url = 'http://localhost:5000/info_all';
  Http.open("GET", url);
  Http.send();
  var info;

  Http.onreadystatechange = (e) => {
    info = JSON.parse(Http.responseText);
  }

  metric = [
    "Ticker",
    "Price",
    "P/E",
    "RSI (14)",
    "Target Price",
    "Volatility",
    "EPS (ttm)",
    "Dividend %",
    "ROE",
    "ROI",
    "P/B",
    "Insider Own",
  ]

  very_negative_color = 'rgb(192, 57, 43)';
  negative_color = 'rgb(231, 76, 60)';
  neutral_color = 'rgb(243, 156, 18)';
  positive_color = 'rgb(39, 174, 96)';
  very_positive_color = 'rgb(22, 160, 133)';

  function getMetricColor(type, value) {
    if (type == "P/B") {
      if (value > 20) return very_negative_color;
      else if (value > 12) return negative_color;
      else if (value > 8) return neutral_color;
      else if (value > 4) return positive_color
      else return very_positive_color
    }
    if (type == "P/E") {
      if (value > 100) return very_negative_color;
      else if (value > 40) return negative_color;
      else if (value > 30) return neutral_color;
      else if (value > 20) return positive_color
      else return very_positive_color
    }
    if (type == "Target Price") {
      return neutral_color
    }
    if (type == "RSI (14)") {
      if (value < 22) return very_positive_color;
      else if (value < 30) return positive_color;
      else if (value < 55) return neutral_color;
      else if (value < 70) return negative_color
      else return very_negative_color
    }
    if (type == "RSI (14)") {
      if (value < 22) return very_positive_color;
      else if (value < 30) return positive_color;
      else if (value < 55) return neutral_color;
      else if (value < 70) return negative_color
      else return very_negative_color
    }

    if (type == "Volatility") {
      if (value < 3.0) return very_positive_color;
      else if (value < 4.0) return positive_color;
      else if (value < 6.0) return neutral_color;
      else if (value < 8.0) return negative_color
      else return very_negative_color
    }
    if (type == "EPS (ttm)") {
      if (value > 20) return very_positive_color;
      else if (value > 10) return positive_color;
      else if (value > 2) return neutral_color;
      else if (value > 0) return negative_color
      else return very_negative_color
    }
    if (type == "Dividend %") {
      if (value > 3) return very_positive_color;
      else if (value > 2) return positive_color;
      else if (value > 1) return neutral_color;
      else if (value > 0) return negative_color
      else return very_negative_color
    }

    if (type == "ROE") {
      if (value > 40) return very_positive_color;
      else if (value > 20) return positive_color;
      else if (value > 10) return neutral_color;
      else if (value > 2) return negative_color
      else return very_negative_color
    }
    if (type == "ROI") {
      if (value > 20) return very_positive_color;
      else if (value > 15) return positive_color;
      else if (value > 8) return neutral_color;
      else if (value > 0) return negative_color
      else return very_negative_color
    }

  }


  function filter() {
    result = info
    var pe = document.getElementById("pe").value;
    var div = document.getElementById("dividend").value;
    var eps = document.getElementById("eps").value;
    var vol = document.getElementById("vol").value;
    var price = document.getElementById("price").value;
    var insider = document.getElementById("insider").value;
    var rsi = document.getElementById("rsi").value;
    var daysent = document.getElementById("7daysent").value;
    var roe = document.getElementById("roe").value;
    var analyst = document.getElementById("analyst").value;
    if (pe != 0) {
      var pe_val = document.getElementById("pe_val").value;
      if (pe == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["P/E"] > pe_val;
        });
      }
      else if (pe == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["P/E"] < pe_val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["P/E"] == pe_val;
        });
      }
    }

    if (div != 0) {
      var div_val = document.getElementById("dividend_val").value;
      if (div == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["Dividend %"] > div_val;
        });
      }
      else if (div == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["Dividend %"] < div_val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["Dividend %"] == div_val;
        });
      }
    }

    if (eps != 0) {
      var eps_val = document.getElementById("eps_val").value;
      if (eps == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["EPS (ttm)"] > eps_val;
        });
      }
      else if (eps == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["EPS (ttm)"] < eps_val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["EPS (ttm)"] == eps_val;
        });
      }
    }

    if (vol != 0) {
      var vol_val = document.getElementById("vol_val").value;
      if (vol == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["Volatility"] > vol_val;
        });
      }
      else if (vol == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["Volatility"] < vol_val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["Volatility"] == vol_val;
        });
      }
    }

    if (price != 0) {
      var val = document.getElementById("price_val").value;
      if (price == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["Price"] > val;
        });
      }
      else if (price == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["Price"] < val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["Price"] == val;
        });
      }
    }

    if (insider != 0) {
      var val = document.getElementById("insider_val").value;
      if (insider == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["Insider Own"] > val;
        });
      }
      else if (insider == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["Insider Own"] < val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["Insider Own"] == val;
        });
      }
    }

    if (rsi != 0) {
      var val = document.getElementById("rsi_val").value;
      if (rsi == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["RSI (14)"] > val;
        });
      }
      else if (rsi == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["RSI (14)"] < val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["RSI (14)"] == val;
        });
      }
    }

    if (daysent != 0) {

    }

    if (roe != 0) {
      var val = document.getElementById("roe_val").value;
      if (roe == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["ROE"] > val;
        });
      }
      else if (roe == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["ROE"] < val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["ROE"] == val;
        });
      }
    }

    if (analyst != 0) {

    }

    if (roe != 0) {
      var val = document.getElementById("roe_val").value;
      if (roe == 1) {
        var result = result.filter(function (value, index, arr) {
          return value["ROE"] > val;
        });
      }
      else if (roe == 2) {
        var result = result.filter(function (value, index, arr) {
          return value["ROE"] < val;
        });
      }
      else {
        var result = result.filter(function (value, index, arr) {
          return value["ROE"] == val;
        });
      }
    }



    console.log(result)
    fetch = document.getElementById('fetch');
    for (var i = fetch.rows.length - 1; i > 0; i--) {
      fetch.deleteRow(i);
    }
    var count = Object.keys(result[0]).length;
    for (var i = 0; i < result.length; i++) {
      var newRow = fetch.insertRow(fetch.length);
      newRow.classList.add("round");
      var link = document.createElement("a");
      for (var j = 0; j < metric.length; j++) {
        var cell = newRow.insertCell(j);
        if (metric[j] == "Ticker") {
          var linkText = document.createTextNode(result[i][metric[j]]);
          link.appendChild(linkText);
          link.href = "http://localhost:5000/stock/" + result[i][metric[j]]
          link.target = "_blank"
          cell.appendChild(link)
        }
        else {
          cell.innerHTML = result[i][metric[j]];
          var color = getMetricColor(metric[j], result[i][metric[j]])
          cell.style.color = color
        }
      }
    }
    fetch.scrollIntoView({ behavior: "smooth", block: "end", inline: "nearest" });
  }


  function sortTable() {
    var table, rows, switching, i, x, y, shouldSwitch;
    table = document.getElementById("fetch");
    switching = true;
    /* Make a loop that will continue until
    no switching has been done: */
    while (switching) {
      // Start by saying: no switching is done:
      switching = false;
      rows = table.rows;
      /* Loop through all table rows (except the
      first, which contains table headers): */
      for (i = 1; i < (rows.length - 1); i++) {
        // Start by saying there should be no switching:
        shouldSwitch = false;
        /* Get the two elements you want to compare,
        one from current row and one from the next: */
        x = rows[i].getElementsByTagName("TD")[0];
        y = rows[i + 1].getElementsByTagName("TD")[0];
        // Check if the two rows should switch place:
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
      if (shouldSwitch) {
        /* If a switch has been marked, make the switch
        and mark that a switch has been done: */
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
      }
    }
  }
  var sorted_num = 0

  function sortTableNum(col) {

    var table, rows, switching, i, x, y, shouldSwitch;
    table = document.getElementById("fetch");
    switching = true;
    sorted_num = sorted_num + 1
    /*Make a loop that will continue until
    no switching has been done:*/
    while (switching) {
      //start by saying: no switching is done:
      switching = false;
      rows = table.rows;
      /*Loop through all table rows (except the
      first, which contains table headers):*/
      for (i = 1; i < (rows.length - 1); i++) {
        //start by saying there should be no switching:
        shouldSwitch = false;
        /*Get the two elements you want to compare,
        one from current row and one from the next:*/
        x = rows[i].getElementsByTagName("TD")[col];
        y = rows[i + 1].getElementsByTagName("TD")[col];
        //check if the two rows should switch place:
        if (Number(x.innerHTML) < Number(y.innerHTML) && sorted_num % 2 == 0) {
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
        else if (Number(x.innerHTML) > Number(y.innerHTML) && sorted_num % 2 == 1) {
          shouldSwitch = true;
          break;
        }
      }
      if (shouldSwitch) {
        /*If a switch has been marked, make the switch
        and mark that a switch has been done:*/
        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
        switching = true;
      }
    }
  }

  function Change(num) {
    var elem = document.getElementsByClassName("FILTER-" + num)[0].getElementsByTagName('select')[0];
    console.log(elem.value)
    if (elem.value != 0) {
      document.getElementsByClassName("FILTER-" + num)[0].classList.add("picked")
    }
    else {
      document.getElementsByClassName("FILTER-" + num)[0].classList.remove("picked")
    }
  }


</script>

</html>